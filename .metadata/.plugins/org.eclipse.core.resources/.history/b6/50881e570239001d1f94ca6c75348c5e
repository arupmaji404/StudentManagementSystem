package com.studentmanagement.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.studentmanagement.model.MarksModel;
import com.studentmanagement.model.StudentModel;
import com.studentmanagement.service.MarksServiceImpl;
import com.studentmanagement.service.StudentServiceImpl;

@Controller
@RequestMapping("/student")
public class StudentController {

	@Autowired
	private MarksServiceImpl marksService;

	@Autowired
	private StudentServiceImpl studentService;

	@RequestMapping("/studentIndex")
	public String home() {
		return "student/studentHome";
	}

	@RequestMapping("/view-marks")
	public String viewMarks(Model model) {
		Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		String username = "";
		if (principal instanceof UserDetails) {
			username = ((UserDetails) principal).getUsername();
		} else {
			username = principal.toString();
		}
		String email = username;
		MarksModel marks = marksService.findMarksByEmail(email);
		model.addAttribute("marks", marks);
		return "student/viewmarks";
	}

	@RequestMapping("/view-class-marks")
	public String viewClassMark() {
		Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
		String username = "";
		if (principal instanceof UserDetails) {
			username = ((UserDetails) principal).getUsername();
		} else {
			username = principal.toString();
		}
		String email = username;
		StudentModel student = studentService.getStudentByEmail(email);
		int standard = student.getStandard();

		List<StudentModel> students = studentService.getAllStudentsByStandard(standard);
		List<MarksModel> allMarks = new ArrayList<MarksModel>();
		MarksModel temp = null;
		for (int i = 0; i < students.size(); i++) {
			temp = marksService.findMarksByEmail(students.get(i).getEmail());
			if (temp != null)
				allMarks.add(temp);
		}
		int min_english = 0, max_english = 0, avg_english = 0;
		int min_math = 0, max_math = 0, avg_math = 0;
		int min_science = 0, max_science = 0, avg_science = 0;
		int min_sst = 0, max_sst = 0, avg_sst = 0;
		int min_computer = 0, max_computer = 0, avg_computer = 0;
		for(int i = 0; i<allMarks.size(); i++)
		{
			
		}

	}
}
